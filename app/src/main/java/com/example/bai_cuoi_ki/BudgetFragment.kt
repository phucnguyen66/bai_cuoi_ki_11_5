package com.example.bai_cuoi_ki

import android.content.Intent
import android.content.SharedPreferences
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.Switch
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import androidx.appcompat.app.AppCompatDelegate
import com.google.firebase.database.DataSnapshot
import com.google.firebase.database.DatabaseError
import com.google.firebase.database.FirebaseDatabase
import com.google.firebase.database.ValueEventListener

class BudgetFragment : Fragment(R.layout.setting) {

    private lateinit var switchTheme: Switch
    private lateinit var sharedPreferences: SharedPreferences
    private lateinit var xinchao: TextView
    private lateinit var btnLogout: Button


    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)


//n√∫t xem l·ªãch s·ª≠ l√†m b√†i-------------------------------------------------------------

// n√∫t xem ·∫øt qu·∫£ t·ªët nh·∫•t----------------------------------------------------------------
        val btnBestScore: Button = view.findViewById(R.id.kqtotnhat)
        btnBestScore.setOnClickListener {
            chonCapDoVaChuDe()
        }
// n√∫t g·ª≠i ph·∫£n h·ªìi------------------------------------------------------------------------------------
        val chill: Button = view.findViewById(R.id.phanhoi)
        chill.setOnClickListener {
            val intent = Intent(requireActivity(), SendMessageActivity::class.java)
            startActivity(intent)
        }
// hi·ªán t√™n ng∆∞·ªùi d√πng--------------------------------------------------------------------------
        val sharedPreferences = requireActivity().getSharedPreferences("UserPrefs", android.content.Context.MODE_PRIVATE)
        val loggedInUser = sharedPreferences.getString("loggedInUser", "")
        xinchao = view.findViewById(R.id.ten)
        xinchao.text= "ch√†o m·ª´ng b·∫°n quay tr·ªü l·∫°i $loggedInUser"
        btnLogout = view.findViewById(R.id.btnLogout)
        btnLogout.setOnClickListener {
            val sharedPreferences = requireActivity().getSharedPreferences("UserPrefs", AppCompatActivity.MODE_PRIVATE)
            sharedPreferences.edit().remove("loggedInUser").apply()

            // Chuy·ªÉn v·ªÅ LoginActivity
            val intent = Intent(requireActivity(), LoginActivity::class.java)
            startActivity(intent)
            requireActivity().finish() // ƒê√≥ng Activity hi·ªán t·∫°i
        }
       var btnxemtt: Button = view.findViewById(R.id.xemthongtin)
        btnxemtt.setOnClickListener {

            val intent = Intent(requireActivity(), ThongKeActivity::class.java)
            startActivity(intent)
        }
    }
    //h√†m xem th√¥ng tin-----------------------------------------------------------

//h√†m--------------------------------------------------------------------------------------
    // Thay ƒë·ªïi ch·∫ø ƒë·ªô s√°ng/t·ªëi
private fun setTheme(isDarkMode: Boolean) {
    if (isDarkMode) {
        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES)
    } else {
        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)
    }
}
    private fun chonCapDoVaChuDe() {
        val capDoList = arrayOf("C·∫•p 1", "C·∫•p 2", "C·∫•p 3")

        val builderCap = androidx.appcompat.app.AlertDialog.Builder(requireContext())
        builderCap.setTitle("Ch·ªçn c·∫•p ƒë·ªô")
        builderCap.setItems(capDoList) { _, whichCap ->
            val capDuocChon = whichCap + 1
            chonChuDeTheoCap(capDuocChon)
        }
        builderCap.show()
    }
    private fun chonChuDeTheoCap(cap: Int) {
        val chuDeList = arrayOf("B√†i tr·∫Øc nghi·ªám", "B√†i gi·∫£i", "B√†i h√¨nh")

        val builderChuDe = androidx.appcompat.app.AlertDialog.Builder(requireContext())
        builderChuDe.setTitle("Ch·ªçn ch·ªß ƒë·ªÅ")
        builderChuDe.setItems(chuDeList) { _, whichChuDe ->
            val chuDeFirebase = when (whichChuDe) {
                0 -> "baicap$cap"
                1 -> "baigiaicap$cap"
                2 -> "baihinhcap$cap"
                else -> ""
            }

            layKetQuaCaoNhat(chuDeFirebase)
        }
        builderChuDe.show()
    }

    private fun layKetQuaCaoNhat(chuDe: String) {
        val sharedPreferences = requireActivity().getSharedPreferences("UserPrefs", AppCompatActivity.MODE_PRIVATE)
        val userId = sharedPreferences.getString("loggedInUser", "") ?: ""

        val databaseRef = FirebaseDatabase.getInstance().getReference("ket_qua").child(userId)

        databaseRef.addListenerForSingleValueEvent(object : ValueEventListener {
            override fun onDataChange(snapshot: DataSnapshot) {
                var diemCaoNhat = -1
                var ketQuaTotNhat: LichSuModel? = null

                for (item in snapshot.children) {
                    val chuDeValue = item.child("chuDe").getValue(String::class.java) ?: continue
                    if (chuDeValue == chuDe) {
                        val dung = item.child("dung").getValue(Int::class.java) ?: 0
                        val sai = item.child("sai").getValue(Int::class.java) ?: 0
                        val ngayThang = item.child("ngayThang").getValue(String::class.java) ?: ""

                        val tongCau = dung + sai
                        val diem = if (tongCau > 0) (dung * 10 / tongCau) else 0

                        if (diem > diemCaoNhat) {
                            diemCaoNhat = diem
                            ketQuaTotNhat = LichSuModel( ngayThang,chuDeValue, dung, sai)
                        }
                    }
                }

                if (ketQuaTotNhat != null) {
                    val thongBao = """
                    üìò Ch·ªß ƒë·ªÅ: ${ketQuaTotNhat.chuDe}
                    üìÖ Ng√†y: ${ketQuaTotNhat.ngayThang}
                    ‚úÖ ƒê√∫ng: ${ketQuaTotNhat.dung}
                    ‚ùå Sai: ${ketQuaTotNhat.sai}
                    üèÜ ƒêi·ªÉm: $diemCaoNhat
                """.trimIndent()

                    androidx.appcompat.app.AlertDialog.Builder(requireContext())
                        .setTitle("K·∫øt qu·∫£ t·ªët nh·∫•t")
                        .setMessage(thongBao)
                        .setPositiveButton("OK", null)
                        .show()
                } else {
                    androidx.appcompat.app.AlertDialog.Builder(requireContext())
                        .setTitle("Th√¥ng b√°o")
                        .setMessage("Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ cho ch·ªß ƒë·ªÅ \"$chuDe\"")
                        .setPositiveButton("OK", null)
                        .show()
                }
            }

            override fun onCancelled(error: DatabaseError) {
                Toast.makeText(requireContext(), "L·ªói: ${error.message}", Toast.LENGTH_SHORT).show()
            }
        })
    }

}
